threats:

  - id: OCST-1.1.1
    name: User Data contains sensitive data
    description: |
      An attacker can gain access to sensitive information if it is
      stored in User Data, especially if they have read access to CloudFormation. 
      Secret data such as passwords, API or pre-shared keys should not be placed 
      directly in UserData.
    service: AWS EC2
    status: Confirmed
    stride:
      - Information Disclosure
    components:
      - User Data
    mitigations:
      - aws/ec2/features/userdata_does_not_contain_sensitive_information.feature
    references:
      - https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html

  - id: OCST-1.1.2
    name: Tampering of User Data
    descripton: |
      Weak protection of the User Data script allows an attacker modify the User Data an inject mallicious commands that will execute as part of the instance creation.

      For example, weak file permissions or in appropriate access restrictions on a CI/CD job may result in tampering.
    service: AWS EC2
    status: Confirmed
    stride:
      - Tampering
    components:
      - User Data
    mitigations:
      - Use restrictive permissions on the User Data script
    references:
      - https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html
    
  - id: OCST-1.1.3
    name: Metadata Server Side Request Forgery
    description: |
      TODO
    service: AWS EC2
    status: Confirmed
    stride:
      - Information Disclosure
    components:
      - Metadata service
    mitigations:
      - TODO
    references:
      - https://blog.christophetd.fr/abusing-aws-metadata-service-using-ssrf-vulnerabilities/
      - https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html

  - id: OCST-1.1.4
    name: Replacing User Data artifacts
    description: |
      An attacker is able to overwrite build artifacts used during instance creation resulting in arbitrary code execution due to weak protection of the artifacts.

      For example, if an attacker can replace an installation package (e.g. a .deb or .rpm file) stored in S3, then when the instance pulls teh package down as part of the User Data script, it will extract and execute the package as root giving the attacker code execution.
    service: AWS EC2
    status: Confirmed
    stride:
      - Tampering
      - Elevation of Privilege
    components:
      - User Data
    mitigations:
      - Ensure all external artifacts used by a User Data script are sufficiently protected
    references:
      - https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html

  - id: OCST-1.1.5
    name: Instance search hijack
    description: |
      An attacker can create a similarly named or tagged instance which is included in a search and therefore acted upon by some business logic. 

      For example, the attacker creates an instance with the tag "Name:WebService" that runs a modified ssh daemon that collects usernames and passwords. When the administrator attempts to SSH to each "Name:WebService" instance, it includes the attackers instance, thereby exposing the administrator's credentials.
    service: AWS EC2
    status: Confirmed
    stride:
      - Spoofing
    components:
      - Instances
      - Tagging
    mitigations:
      - Restrict the creation of new instances
      - Apply detective controls to identify rogue instances
    references:
      - https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EC2_GetStarted.html

  - id: OCST-1.1.6
    name: Security Group stacking
    description: |
      An attacker can attach security groups to running instances thereby increasing the attack surface or allowing easier exfiltration of data where outbound connectivity is restricted.

      If an attacker has the ability to create or attach existing security groups with more permissive rules to an instance, they may be able to reach newly exposed services running on the instance or they may be able to use outbound connectivity previously restricted.
    service: AWS EC2
    status: Confirmed
    stride:
      - Tampering
    components:
      - Security Groups
      - Instances
    mitigations:
      - Restrict the ability to create, modify and attach security groups
    references:
      - https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html

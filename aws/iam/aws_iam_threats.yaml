threats:

  - id: OCST-1.3.1
    name: Unprotected access keys
    description: |
      Attacker can gain unauthorised access to resources using unprotected AWS access keys.

      If an AWS user doesn't sufficiently protect their access keys, for example by leaving them on a server, then an attacker could use those keys to gain access to any resources assigned to those keys.

      Because the use of the API access keys is global, the attacker doesn't need to be an account already if the keys are exposed outside of AWS.  
    service: AWS IAM
    status: Confirmed
    stride:
      - Information Disclosure
      - Elevation of Privilege
    components:
      - IAM user
      - Access Key
    mitigations:
      - Access key rotation. Either fixed time or dynamic using SSO
      - Detection and clean up of unused access keys and users
      - Assume roles where possible
    references:
      - https://docs.aws.amazon.com/general/latest/gr/managing-aws-access-keys.html
      - https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#lock-away-credentials

  - id: OCST-1.3.2
    name: Unprotected root access keys
    description: |
      Attacker can gain unauthorised access to ALL resources using unprotected root access keys.

      The account root user has full access to all resources, including billing, and cannot be restricted.
    service: AWS IAM
    status: Confirmed
    stride:
      - Information disclosure
      - Elevation of privilege
    components:
      - IAM User
      - Access Key
      - AWS Account (root user)
    mitigations:
      - Do not use root access keys. Instead create separate administrative users or ideally users with the least privilege required for the use case.
    references:
      - https://docs.aws.amazon.com/general/latest/gr/managing-aws-access-keys.html
      - https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#lock-away-credentials

  - id: OCST-1.3.3
    name: Unexpected AWS ManagedPolicy updates 
    description: |
      An attacker can gain elevated permissions through unexpected AWS ManagedPolicy updates.

      If the organisation uses AWS provided ManagedPolicies, then they may not be aware of the updates made by AWS to those policies. If AWS introduces additional services or actions, then the organisation may have additional exposure that they're not aware of. An attacker that knows about the updates may be able to use this to their advantage.

    service: AWS IAM
    status: Confirmed
    stride: 
      - Elevation of privilege
    components:
      - IAM ManagedPolicy
    mitigations:
      - Use customer managed policies with non-wildcard actions.
    references:
      - https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html

  - id: OCST-1.3.4
    name: Weak password policy
    description: |
      An attacker can guess a user's AWS console password through weak password policy.

      If an account password policy is not used, or is configured to be weak, then an attacker might be able to guess a user's password.
    service: AWS IAM
    status: Confirmed
    stride:
      - Elevation of privilege
    components:
      - IAM User
      - Account Password Policy
    mitigations:
      - Use a complex password policy such as having a minimum length and/or requiring specific character types.
      - Use federation (SSO)
    references:
      - https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html

  - id: OCST-1.3.5
    name: Confused deputy
    description: |
        An attacker can perform the confused deputy attack by tricking a trusted third party into assuming the role of an ARN in another account.
    service: AWS IAM
    status: Confirmed
    stride:
      - Elevation of privilege
    components:
      - IAM AssumeRole
    mitigations:
      - Use the optional ExternalId in a condition as a pre-shared key
    references:
      - https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html
      - https://aws.amazon.com/blogs/security/tag/confused-deputy/

  - id: OCST-1.3.6
    name: Weak ExternalId
    description: |
      Where ExternalId is used, attacker can perform the confused deputy attack by tricking a trusted third party into assuming the role of an ARN in another account because the ExternalId lacked complexity and was easy to guess
    service: AWS IAM
    status: Confirmed
    stride:
      - Elevation of privilege
    components:
      - IAM AssumeRole
      - ExternalId
    mitigations:
      - Use a long, securely generated random ExternalId
    references:
      - https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html
      - https://aws.amazon.com/blogs/security/tag/confused-deputy/

  - id: OCST-1.3.7
    name: Accounts used as principals
    description: |
      An attacker with an unprivileged user or role in a trusted (source) account may be able to gain elevated privileges in a trusting (destination) account by assuming a role in the trusting account that uses the trusted account (:root user) as a principal rather than using a specific role or user. This is because using an account as a principal exposes it to all principals in the trusted account.
    service: AWS IAM
    status: Confirmed
    stride:
      - Elevation of privilege
    components:
      - IAM AssumeRole
    mitigations:
      - Use specific users or roles as principals
    references:
      - https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html#Principal
